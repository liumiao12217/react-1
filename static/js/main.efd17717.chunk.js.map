{"version":3,"sources":["work/Input.js","work/List.js","work/todoList.js","index.js"],"names":["Input","props","style","margin","background","height","fontSize","color","width","htmlFor","type","id","value","onChange","e","handleChange","onClick","addInp","List","todos","map","todo","indx","done","listStyle","toggle","checked","dangerouslySetInnerHTML","__html","title","delInp","TodoList","console","log","target","setState","inpValue","state","alert","filter","item","index","newTodo","JSON","parse","stringify","localStorage","getItem","this","setItem","arr1","arr2","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efd17717.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n\r\n  return <div style={{ margin: '-8px', background: 'black', height: '50px', fontSize: '20px', color: 'white' }}>\r\n    <div style={{width:'500px',margin:'0 auto'}}>\r\n      <label htmlFor='inp' style={{ margin: '10px 20px', height: '22px' }}>todolist</label>\r\n      <input type='text' id='inp'\r\n        value={props.value}\r\n        onChange={(e) => props.handleChange(e)}\r\n        style={{ margin: '10px 10px', height: '22px' }} />\r\n      <button onClick={() => props.addInp()}>add</button>\r\n\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react'\r\n\r\nconst List = (props) => {\r\n  return props.todos.map((todo, indx) => {\r\n    if (props.done == todo.done) {\r\n      return <div style={{ width: '200px', height: '30px' }}>\r\n        <li style={{ listStyle: 'none' ,width:'180px'}}>\r\n          <input\r\n            onClick={() => props.toggle(indx)}\r\n            checked={props.done} type='checkbox' />\r\n          <span dangerouslySetInnerHTML={{ __html: todo.title }}></span>\r\n          <button onClick={() => props.delInp(indx)}>remove</button>\r\n        </li>\r\n      </div>\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport default List;","import Input from './Input'\r\nimport List from './List'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nclass TodoList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:\r\n                [\r\n                ]\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({ inpValue: e.target.value })\r\n        \r\n    }\r\n    componentDidMount() {\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if (todos) {\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    //组件更新时立即调用，初始化时不会调用\r\n    componentDidUpdate() {\r\n        localStorage.setItem('todos', JSON.stringify(this.state.todos))\r\n    }\r\n \r\n\r\n    addInp = () => {\r\n        if (!this.state.inpValue) {\r\n            alert('不能为空');\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({ inpValue: \"\" });\r\n    }\r\n\r\n    delInp = (indx) => {\r\n        this.setState({\r\n            todos: this.state.todos.filter((item, index) => index != indx)\r\n        })\r\n    }\r\n    toggle = (index) => {\r\n        let newTodo = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodo[index].done = !newTodo[index].done;\r\n        this.setState({\r\n            todos: newTodo\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const { todos, inpValue } = this.state;\r\n        let arr1 = todos.filter(item => !item.done);\r\n        let arr2 = todos.filter(item => item.done);\r\n        return (\r\n            <div style={{background:'#eee',margin:'-8px',height:'600px'}}>\r\n                <Input value={inpValue} handleChange={this.handleChange} addInp={this.addInp}/>\r\n                <div style={{width:'200px',margin:'0 auto'}}>\r\n                    <h2>正在进行{arr1.length}</h2>\r\n                    <List todos={todos} done={false} toggle={this.toggle} delInp={this.delInp}/>\r\n                </div>\r\n                <div style={{width:'200px',margin:'0 auto'}}>\r\n                    <h2>已经完成{arr2.length}</h2>\r\n                    <List todos={todos} done={true} toggle={this.toggle} delInp={this.delInp}/>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport TodoList from './work/todoList'\r\nReactDOM.render(\r\n  <TodoList />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// let ele=<h1 id=\"titled\">hello react</h1>\r\n// let ele=React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello react')\r\n//   )\r\n\r\n// console.log(ele);\r\n\r\n// let ele=<h1 id=\"title\" className='tit'>\r\n//   React\r\n//   <div>hello</div>\r\n// </h1>\r\n//将jsx对象渲染到DOM中\r\n// let ReactDOM={\r\n//   render(eleObj,container){\r\n//     //解构\r\n//       const{type,props}=eleObj;\r\n//       //创建第一层节点\r\n//       let ele=document.createElement(type);\r\n//       //遍历属性对象，将属性添加到第一层节点对象上\r\n//       for(const prop in props){\r\n//         if(prop=='children'){\r\n//           if(typeof props.children=='string'){\r\n//             const txtNode=document.createTextNode(props[prop]);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//           }\r\n//           //将第一层节点对象的子元素添加进去\r\n//           props.children.forEach((child) => {\r\n//             if(typeof child=='string'){\r\n//               const txtNode=document.createTextNode(child);\r\n//               ele.appendChild(txtNode);\r\n//             }else{\r\n//               ReactDOM.render(child,ele);\r\n//             }\r\n//           });\r\n//         }else{\r\n//           ele[prop]=props[prop];\r\n//         }\r\n//       }\r\n\r\n//       //将第一层dom节点添加到container中\r\n//       container.appendChild(ele)\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(\r\n//     ele,\r\n//     document.getElementById('root')\r\n// );\r\n\r\n\r\n\r\n\r\n// import Home from './pages/Home'\r\n\r\n// setInterval(() => {\r\n\r\n//   let ele = <h1 id=\"title\" className='tit'>\r\n//     <div>当前时间</div>\r\n//     {new Date().toLocaleString()}\r\n//   </h1>;\r\n\r\n//   console.log(ele);\r\n//   ReactDOM.render(\r\n//     ele,\r\n//     document.getElementById('root')\r\n//   );\r\n// }, 1000);\r\n\r\n\r\n//函数组件\r\n//Ui（展示）组件，木偶组件\r\n// function App(props){\r\n//   const{title,id}=props;\r\n//   return <div>\r\n//     <h1>App组件的内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n\r\n//   </div>\r\n// }\r\n\r\n\r\n//智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     //生命状态\r\n//     this.state={name:new Date().toLocaleString()}\r\n//     setTimeout(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//     },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App  title={this.state.name} id='app'/>\r\n//       <App  title='ig' id='333'/>\r\n//       <App  title='def' id='uvw'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// import $ from 'jquery';\r\n\r\n\r\n//alt+shift+上下键  复制一行\r\n//alt+上下键   移动一行\r\n//ctrl+shift +左右键选中单词直接删除\r\n\r\n\r\n\r\n\r\n// const Buttons=()=>{\r\n//   const btns=[1,2,3,4,5];\r\n//   const handleClick=(num)=>{\r\n//     console.log(num);\r\n//   }\r\n//   return <div>\r\n//     {\r\n//       btns.map((item)=>(\r\n//       <button key={item} onClick={()=>handleClick(item)}>\r\n//         {item}\r\n//         </button>))\r\n//     }\r\n//   </div>\r\n// }\r\n// class Home extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     //生命状态\r\n//     this.state={\r\n//       data:[]\r\n//     }\r\n//     fetch('https://cnodejs.org/api/v1/topics')\r\n//     .then(res=>res.json())\r\n//     .then(({data})=>{\r\n//       this.setState({data})\r\n//     })\r\n//     // this.handleClick=this.handleClick.bind(this);\r\n//   }\r\n//   componentDidMount(){\r\n//     fetch('https://cnodejs.org/api/v1/topics')\r\n//       .then(res=>res.json())\r\n//       .then(({data})=>{\r\n//         this.setState({data})\r\n//       })\r\n//   }\r\n//   handleClick=()=>{\r\n//     console.log(this)\r\n//   }\r\n//   getData=(item)=>{\r\n//     fetch('https://cnodejs.org/api/v1/topics?page='+item)\r\n//     .then(res=>res.json())\r\n//     .then(({data})=>{\r\n//       this.setState({data})\r\n//     })\r\n//   }\r\n\r\n//   render(){\r\n//     const{data}=this.state;\r\n//     const btns=[1,2,3,4,5];\r\n//     const handleClick=(num)=>{\r\n//       console.log(num);\r\n//     }\r\n//     return <div>\r\n//         {btns.map((item)=>(\r\n//         <button key={item} onClick={()=>this.getData(item)}>\r\n//         {item}\r\n//         </button>))}\r\n//         {/* <button onClick={this.handleClick}>click</button> */}\r\n//         {/* <Buttons /> */}\r\n//         <List data={data}/>\r\n         \r\n//     </div>\r\n    \r\n//   }\r\n// }\r\n\r\n// import Ctrlcon from './component/ctrlcon'\r\n// import Demo01 from './pages/Demo01';\r\n\r\n// import App from './pages/App';\r\n// import Hoc,{Detail} from './pages/Hoc';\r\n// import Hook from './pages/Hook'\r\n// import Context from './component/context'\r\n\r\n\r\n\r\n"],"sourceRoot":""}